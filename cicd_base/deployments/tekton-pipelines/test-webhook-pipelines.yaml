
# PERMISSIONS
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tekton-triggers-example-sa
  annotations:
    argocd.argoproj.io/sync-wave: "1"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: triggers-example-eventlistener-binding
  annotations:
    argocd.argoproj.io/sync-wave: "1"
subjects:
- kind: ServiceAccount
  name: tekton-triggers-example-sa
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-triggers-eventlistener-roles
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: triggers-example-eventlistener-clusterbinding
  annotations:
    argocd.argoproj.io/sync-wave: "1"
subjects:
- kind: ServiceAccount
  name: tekton-triggers-example-sa
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-triggers-eventlistener-clusterroles

# WEBHOOK....
---
  apiVersion: triggers.tekton.dev/v1beta1
  kind: EventListener
  metadata:
    name: test-event-listener
  spec:
    triggers:
    - name: test-event-listener
      interceptors: 
      - name: "Command"
        ref:
          name: "cel"
        params:
        - name: "filter"
          value: "body.command in ['apply', 'delete']"
      bindings:
        - ref: test-trigger-binding
      template:
        ref: test-trigger-template
    resources:
      kubernetesResource:
        spec:
          template:
            spec:
              serviceAccountName: tekton-triggers-example-sa
              containers:
              - resources:
                  requests:
                    memory: "64Mi"
                    cpu: "250m"
                  limits:
                    memory: "128Mi"
                    cpu: "500m"
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  name: test-trigger-binding
spec:
  params: 
  - name: command
    value: $(body.command)
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: test-trigger-template
spec:
  params:
  - name: command
  resourcetemplates:
  - apiVersion: tekton.dev/v1beta1
    kind: TaskRun
    metadata:
      generateName: test-run-
    spec:
      taskSpec:
        volumes:
        - name: apply-volume
          configMap:
            name: test-apply-script
        - name: delete-volume
          configMap:
            name: test-delete-script
        steps:
        - image: ubuntu
          script: |
            #! /bin/bash
            echo "Command: $(tt.params.command)"
            echo "THIS TEST WORKED - 007"
            sh /scripts/$(tt.params.command)/exec.sh
          volumeMounts:
          - name: apply-volume
            mountPath: /scripts/apply
          - name: delete-volume
            mountPath: /scripts/delete

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-apply-script
data:
  exec.sh: |
    echo "I AM AN APPLY SCRIPT"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-delete-script
data:
  exec.sh: |
    echo "I AM AN DELETE SCRIPT"

