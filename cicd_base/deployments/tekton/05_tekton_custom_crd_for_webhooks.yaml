# ---
# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: tekton-webhook-service-account
#   annotations:
#     argocd.argoproj.io/sync-wave: "5"
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: Role
# metadata:
#   name: tekton-webhook-triggers-minimal
#   annotations:
#     argocd.argoproj.io/sync-wave: "5"
# rules:
# # EventListeners need to be able to fetch all namespaced resources
# - apiGroups: ["triggers.tekton.dev"]
#   resources: ["eventlisteners", "triggerbindings", "triggertemplates", "triggers", "interceptors"]
#   verbs: ["get", "list", "watch"]
# - apiGroups: [""]
# # configmaps is needed for updating logging config
#   resources: ["configmaps"]
#   verbs: ["get", "list", "watch"]
# # Permissions to create resources in associated TriggerTemplates
# - apiGroups: ["tekton.dev"]
#   resources: ["pipelineruns", "pipelineresources", "taskruns"]
#   verbs: ["create"]
# - apiGroups: [""]
#   resources: ["serviceaccounts"]
#   verbs: ["impersonate"]
# - apiGroups: ["policy"]
#   resources: ["podsecuritypolicies"]
#   resourceNames: ["tekton-triggers"]
#   verbs: ["use"]
# - apiGroups: [""]
#   resources: ["pods", "pods/log"]
#   verbs: ["get", "list", "watch"]
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   name: tekton-webhook-triggers-binding
#   annotations:
#     argocd.argoproj.io/sync-wave: "5"
# subjects:
# - kind: ServiceAccount
#   name: tekton-webhook-service-account
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: Role
#   name: tekton-webhook-triggers-minimal
# ---
# kind: ClusterRole
# apiVersion: rbac.authorization.k8s.io/v1
# metadata:
#   name: tekton-webhook-triggers-clusterrole
#   annotations:
#     argocd.argoproj.io/sync-wave: "5"
# rules:
#   # EventListeners need to be able to fetch any clustertriggerbindings
# - apiGroups: ["triggers.tekton.dev"]
#   resources: ["clustertriggerbindings", "clusterinterceptors", "interceptors"]
#   verbs: ["get", "list", "watch"]
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRoleBinding
# metadata:
#   name: tekton-webhook-triggers-clusterbinding
#   annotations:
#     argocd.argoproj.io/sync-wave: "5"
# subjects:
# - kind: ServiceAccount
#   name: tekton-webhook-service-account
#   namespace: default
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: ClusterRole
#   name: tekton-webhook-triggers-clusterrole


---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tekton-webhook-service-account
  annotations:
    argocd.argoproj.io/sync-wave: "5"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tekton-taskrun-1-role
  annotations:
    argocd.argoproj.io/sync-wave: "5"
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tekton-webhook-triggers-binding
  annotations:
    argocd.argoproj.io/sync-wave: "5"
subjects:
- kind: ServiceAccount
  name: tekton-webhook-service-account
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tekton-taskrun-1-role
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: triggers-example-eventlistener-binding
  annotations:
    argocd.argoproj.io/sync-wave: "5"
subjects:
- kind: ServiceAccount
  name: tekton-webhook-service-account
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-triggers-eventlistener-roles
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: triggers-example-eventlistener-clusterbinding
  annotations:
    argocd.argoproj.io/sync-wave: "5"
subjects:
- kind: ServiceAccount
  name: tekton-webhook-service-account
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-triggers-eventlistener-clusterroles